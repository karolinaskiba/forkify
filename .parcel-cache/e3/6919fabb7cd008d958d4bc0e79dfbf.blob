var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _viewJs = require('./view.js');
var _viewJsDefault = _parcelHelpers.interopDefault(_viewJs);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
class PaginationView extends _viewJsDefault.default {
  _parentElement = document.querySelector('.pagination');
  _generateMarkup() {
    const curPage = this._data.page;
    const numPages = Math.ceil(this._data.results.length / this._data.resultPerPage);
    // page 1 and there are other pages
    if (curPage === 1 && numPages > 1) {
      return `
      <button class="btn--inline pagination__btn--next">
        <span>Page ${curPage + 1}</span>
        <svg class="search__icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-right"></use>
        </svg>
      </button>
      `;
    }
    // last page
    if (curPage === numPages && numPages > 1) {
      return `
          <button class="btn--inline pagination__btn--prev">
          <svg class="search__icon">
            <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-left"></use>
          </svg>
          <span>Page ${curPage - 1}</span>
        </button>
      `;
    }
    // other page
    if (curPage < numPages) {
      return `
      <button class="btn--inline pagination__btn--prev">
        <svg class="search__icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-left"></use>
        </svg>
        <span>Page ${curPage - 1}</span>
      </button>
      <button class="btn--inline pagination__btn--next">
        <span>Page ${curPage + 1}</span>
        <svg class="search__icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-right"></use>
        </svg>
      </button>
      `;
    }
    // page 1 andthere are no other pages
    return ``;
  }
  addHandlerClick(handler) {
    this._parentElement.addEventListener('click', function (e) {
      const btn = e.target.closest('btn--inline');
      console.log(btn);
      handler();
    });
  }
}
exports.default = new PaginationView();
